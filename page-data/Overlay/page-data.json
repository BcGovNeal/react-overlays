{"componentChunkName":"component---src-pages-overlay-js","path":"/overlay/","webpackCompilationHash":"b25607cec99ee453d13c","result":{"data":{"OverlayMetadata":{"composes":null,"displayName":"Overlay","description":{"childMarkdownRemark":{"html":"<p>Built on top of <code>Popper.js</code>, the overlay component is\ngreat for custom tooltip overlays.</p>"}},"props":[{"name":"show","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Set the visibility of the Overlay</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"placement","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Specify where the overlay element is positioned in relation to the target element</p>"}},"required":false,"type":{"name":"enum","value":"PopperJS.placements","raw":null}},{"name":"target","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>A DOM Element, Ref to an element, or function that returns either. The <code>target</code> element is where\nthe overlay is positioned relative to.</p>"}},"required":false,"type":{"name":"any","value":null,"raw":null}},{"name":"container","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>A DOM Element, Ref to an element, or function that returns either. The <code>container</code> will have the Portal children\nappended to it.</p>"}},"required":false,"type":{"name":"any","value":null,"raw":null}},{"name":"flip","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Enables the Popper.js <code>flip</code> modifier, allowing the Overlay to\nautomatically adjust it's placement in case of overlap with the viewport or toggle.\nRefer to the <a href=\"https://popper.js.org/popper-documentation.html#modifiers..flip.enabled\">flip docs</a> for more info</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"children","doclets":[{"tag":"type","value":"{Function ({\n  show: boolean,\n  placement: Placement,\n  outOfBoundaries: ?boolean,\n  scheduleUpdate: () => void,\n  props: {\n    ref: (?HTMLElement) => void,\n    style: { [string]: string | number },\n    aria-labelledby: ?string\n  },\n  arrowProps: {\n    ref: (?HTMLElement) => void,\n    style: { [string]: string | number },\n  },\n}) => React.Element}"}],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>A render prop that returns an element to overlay and position. See\nthe <a href=\"https://github.com/FezVrasta/react-popper#children\">react-popper documentation</a> for more info.</p>"}},"required":true,"type":{"name":"Function ({\n  show: boolean,\n  placement: Placement,\n  outOfBoundaries: ?boolean,\n  scheduleUpdate: () => void,\n  props: {\n    ref: (?HTMLElement) => void,\n    style: { [string]: string | number },\n    aria-labelledby: ?string\n  },\n  arrowProps: {\n    ref: (?HTMLElement) => void,\n    style: { [string]: string | number },\n  },\n}) => React.Element","value":null,"raw":null}},{"name":"containerPadding","doclets":[],"defaultValue":{"value":"5","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Control how much space there is between the edge of the boundary element and overlay.\nA convenience shortcut to setting <code>popperConfig.modfiers.preventOverflow.padding</code></p>"}},"required":false,"type":{"name":"number","value":null,"raw":null}},{"name":"popperConfig","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>A set of popper options and props passed directly to react-popper's Popper component.</p>"}},"required":false,"type":{"name":"object","value":null,"raw":null}},{"name":"rootClose","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Specify whether the overlay should trigger <code>onHide</code> when the user clicks outside the overlay</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"rootCloseEvent","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Specify event for toggling overlay</p>"}},"required":false,"type":{"name":"enum","value":[{"value":"'click'","computed":false},{"value":"'mousedown'","computed":false}],"raw":null}},{"name":"rootCloseDisabled","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Specify disabled for disable RootCloseWrapper</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"onHide","doclets":[{"tag":"type","value":"func"}],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>A Callback fired by the Overlay when it wishes to be hidden.</p>\n<p><strong>required</strong> when <code>rootClose</code> is <code>true</code>.</p>"}},"required":false,"type":{"name":"func","value":null,"raw":"function(props, ...args) {\n  let propType = PropTypes.func;\n  if (props.rootClose) {\n    propType = propType.isRequired;\n  }\n\n  return propType(props, ...args);\n}"}},{"name":"transition","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>A <code>react-transition-group@2.0.0</code> <code>&#x3C;Transition/></code> component\nused to animate the overlay as it changes visibility.</p>"}},"required":false,"type":{"name":"elementType","value":null,"raw":null}},{"name":"onEnter","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Callback fired before the Overlay transitions in</p>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"onEntering","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Callback fired as the Overlay begins to transition in</p>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"onEntered","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Callback fired after the Overlay finishes transitioning in</p>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"onExit","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Callback fired right before the Overlay transitions out</p>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"onExiting","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Callback fired as the Overlay begins to transition out</p>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"onExited","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Callback fired after the Overlay finishes transitioning out</p>"}},"required":false,"type":{"name":"func","value":null,"raw":null}}]}},"pageContext":{"isCreatedByStatefulCreatePages":true}}}