{"version":3,"sources":["webpack:///./src/pages/portal.js","webpack:///./src/examples/Portal.js"],"names":["PortalPage","location","PortalMetadata","data","className","dangerouslySetInnerHTML","__html","description","childMarkdownRemark","html","codeText","PortalSource","component","metadata","pageQuery","module","exports"],"mappings":"2FACA,8HA4BeA,UAnBf,YAA6D,IAAvCC,EAAsC,EAAtCA,SAAkBC,EAAoB,EAA5BC,KAAQD,eACtC,OACE,kBAAC,IAAD,CAAMD,SAAUA,GACd,wBAAIG,UAAU,eACZ,kBAAC,IAAD,iBAEF,uBACEC,wBAAyB,CACvBC,OAAQJ,EAAeK,YAAYC,oBAAoBC,QAG3D,kBAAC,IAAD,CAAYC,SAAUC,MACtB,kBAAC,IAAD,CAAWC,UAAU,SAASC,SAAUX,MASvC,IAAMY,EAAS,a,mBC/BtBC,EAAOC,QAAU","file":"component---src-pages-portal-js-8d0a51bfe271a4e0ab82.js","sourcesContent":["import { graphql } from 'gatsby';\nimport React from 'react';\nimport Anchor from '../components/Anchor';\nimport Page from '../components/Page';\nimport Playground from '../components/Playground';\nimport PropTable from '../components/PropTable';\nimport PortalSource from '../examples/Portal';\n\nconst propTypes = {};\n\nfunction PortalPage({ location, data: { PortalMetadata } }) {\n  return (\n    <Page location={location}>\n      <h2 className=\"page-header\">\n        <Anchor>Portals</Anchor>\n      </h2>\n      <p\n        dangerouslySetInnerHTML={{\n          __html: PortalMetadata.description.childMarkdownRemark.html,\n        }}\n      />\n      <Playground codeText={PortalSource} />\n      <PropTable component=\"Portal\" metadata={PortalMetadata} />\n    </Page>\n  );\n}\n\nPortalPage.propTypes = propTypes;\n\nexport default PortalPage;\n\nexport const pageQuery = graphql`\n  query PortalQuery {\n    PortalMetadata: componentMetadata(displayName: { eq: \"Portal\" }) {\n      ...PropTable_metadata\n    }\n  }\n`;\n","module.exports = \"function PortalExample() {\\n  const [show, setShow] = useState(false);\\n  const containerRef = useRef(null);\\n\\n  let child = <span>But I actually render here!</span>;\\n\\n  return (\\n    <div className=\\\"portal-example\\\">\\n      <button\\n        type=\\\"button\\\"\\n        className=\\\"btn btn-primary\\\"\\n        onClick={() => setShow(true)}\\n      >\\n        Render Child\\n      </button>\\n      <div className=\\\"card card-body mb-4\\\">\\n        <span>It looks like I will render in here.</span>\\n\\n        <Portal container={containerRef}>{show && child}</Portal>\\n      </div>\\n\\n      <div className=\\\"card card-body\\\" ref={containerRef} />\\n    </div>\\n  );\\n}\\n\\nrender(<PortalExample />);\\n\""],"sourceRoot":""}