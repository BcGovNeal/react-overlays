{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/@docpocalypse/gatsby-theme/src/components/PropsList-styles.module.css","webpack:///./node_modules/@docpocalypse/gatsby-theme/src/components/PropsList-CssProp2_div.module.css","webpack:///./node_modules/@docpocalypse/gatsby-theme/src/components/PropsList-CssProp1_div.module.css","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./node_modules/@docpocalypse/props-table/esm/DefaultValue.js","webpack:///./node_modules/@docpocalypse/props-table/esm/utils.js","webpack:///./node_modules/@docpocalypse/props-table/esm/TypescriptTypeValue.js","webpack:///./node_modules/@docpocalypse/props-table/esm/PropTypeValue.js","webpack:///./node_modules/@docpocalypse/props-table/esm/index.js","webpack:///./node_modules/@docpocalypse/gatsby-theme/src/components/PropDescription.tsx","webpack:///./node_modules/@docpocalypse/gatsby-theme/src/components/PropsList.tsx","webpack:///./node_modules/@docpocalypse/gatsby-theme/src/components/PropsList-tokenMap.module.css","webpack:///./node_modules/@docpocalypse/gatsby-theme/src/components/Example.tsx","webpack:///./node_modules/@docpocalypse/gatsby-theme/src/components/ComponentPage.tsx","webpack:///./node_modules/@docpocalypse/gatsby-theme/src/templates/component.tsx","webpack:///./node_modules/@docpocalypse/gatsby-theme/src/components/ComponentImport.tsx"],"names":["MDXRenderer","require","module","exports","React","useMDXComponents","mdx","useMDXScope","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","Object","values","key","fn","_ref","value","isElementType","concat","replace","createElement","docletsToMap","doclets","Map","map","name","getDoclet","arguments","length","undefined","doc","find","d","cleanDocletValue","str","trim","getDisplayTypeName","typeName","getTypeName","prop","type","raw","joinElements","arr","delim","reduce","acc","val","idx","list","item","isValidElement","cloneElement","isPrimitive","toLowerCase","_ref2","tags","tokens","Fragment","getType","concrete","get","t","token","renderName","className","renderNamedType","namedType","elements","arrType","userType","signature","arg","isArray","includes","isComplex","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","source","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","_ref3","tsType","mapToTypes","propType","pt","docletType","properties","entries","required","enumValues","Array","e","types","some","match","PropDescription","html","as","Tag","body","dangerouslySetInnerHTML","__html","_j","jsx","_f","F","tokenMap","styles","PropsTable","metadata","propsData","_ref$elementTypes","elementTypes","propData","_description$markdown","defaultValue","description","docletMap","descHtml","markdownRemark","renderedType","deprecated","assign","renderProps","useMemo","pre","p","Pre","LinkedHeading","h","id","css","PropListName","PropListRequiredBadge","PropListTypeDefinition","PropListDefaultValue","Example","example","frontmatter","Props","default","ComponentPage","data","docpocalypse","importName","PageLayout","title","ComponentImport","docNode","ComponentPageTemplate","pageQuery","highlight"],"mappings":"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","file":"component---node-modules-docpocalypse-gatsby-theme-src-templates-component-tsx-8fa43f1dbb3fe552b2dc.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PropListRequiredBadge\":\"PropsList-styles-module--PropListRequiredBadge--3a5lz\",\"PropListTypeDefinition\":\"PropsList-styles-module--PropListTypeDefinition--2WeRN\",\"PropListDefaultValue\":\"PropsList-styles-module--PropListDefaultValue--2f8VQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cls1\":\"PropsList-CssProp2_div-module--cls1--3aeEt\",\"cls2\":\"PropsList-CssProp2_div-module--cls2--vaqvT PropsList-CssProp2_div-module--cls1--3aeEt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cls1\":\"PropsList-CssProp1_div-module--cls1--1CFZN\",\"cls2\":\"PropsList-CssProp1_div-module--cls2--2RW19 PropsList-CssProp1_div-module--cls1--1CFZN\"};","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","import \"core-js/modules/es6.regexp.replace\";\nimport React from 'react';\n\nfunction DefaultValue(_ref) {\n  var value = _ref.value,\n      isElementType = _ref.isElementType;\n  if (value == null || value === 'undefined') return null; // eslint-disable-next-line no-param-reassign\n\n  if (isElementType) value = \"<\".concat(value.replace(/('|\")/g, ''), \">\");\n  return React.createElement(\"code\", null, value);\n}\n\nexport default DefaultValue;","import \"core-js/modules/es6.array.reduce\";\nimport \"core-js/modules/es6.string.trim\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.map\";\nimport React from 'react';\nexport function docletsToMap(doclets) {\n  return new Map(doclets.map(function (_ref) {\n    var name = _ref.name,\n        value = _ref.value;\n    return [name, value];\n  }));\n}\nexport function getDoclet() {\n  var doclets = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var name = arguments.length > 1 ? arguments[1] : undefined;\n  var doc = doclets.find(function (d) {\n    return d.name === name;\n  });\n  return doc && doc.value;\n}\nexport function cleanDocletValue(str) {\n  return str.trim().replace(/^\\{/, '').replace(/\\}$/, '');\n}\nexport function getDisplayTypeName(typeName) {\n  if (typeName === 'func') return 'function';\n  if (typeName === 'bool') return 'boolean';\n  return typeName;\n}\nexport function getTypeName(prop) {\n  var type = prop.type || {};\n  var name = getDisplayTypeName(type.name);\n  if (name === 'custom') return cleanDocletValue(getDoclet(prop.doclets, 'type') || type.raw);\n  return name;\n}\nexport function joinElements(arr, delim, fn) {\n  return arr.reduce(function (acc, val, idx, list) {\n    var item = fn(val, idx);\n\n    if (React.isValidElement(item)) {\n      // eslint-disable-next-line react/no-array-index-key\n      item = React.cloneElement(item, {\n        key: idx\n      });\n    } // eslint-disable-next-line no-param-reassign\n\n\n    acc = acc.concat(item);\n    return idx === list.length - 1 ? acc : acc.concat(delim);\n  }, []);\n}","import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.function.name\";\nimport React from 'react';\nimport { getDoclet, joinElements } from './utils';\n\nvar isPrimitive = function isPrimitive(name) {\n  return name[0].toLowerCase() === name[0];\n};\n\nvar isArray = function isArray(t) {\n  return t.name === 'Array';\n};\n\nvar isComplex = function isComplex(t) {\n  return ['signature', 'union', 'tuple', 'intersect'].includes(t.name);\n};\n\nfunction getType(type, tags, tokens) {\n  var concrete = type;\n\n  var get = function get(t) {\n    return getType(t, tags, tokens);\n  };\n\n  var t = function t(token) {\n    var _ref;\n\n    return (_ref = tokens === null || tokens === void 0 ? void 0 : tokens[token]) !== null && _ref !== void 0 ? _ref : \"pt-token pt-\".concat(token);\n  };\n\n  function renderName(name) {\n    return React.createElement(\"span\", {\n      className: t(isPrimitive(name) ? 'primitive' : 'name')\n    }, name);\n  }\n\n  function renderNamedType(namedType) {\n    return React.createElement(\"span\", {\n      className: t('type_signature')\n    }, renderName(namedType.name), 'elements' in namedType && React.createElement(React.Fragment, null, '<', React.createElement(\"span\", {\n      className: t('elements')\n    }, joinElements(namedType.elements, ', ', get)), '>'));\n  }\n\n  function renderArray(arrType) {\n    return isComplex(arrType.elements[0]) ? renderNamedType(arrType) : React.createElement(\"span\", {\n      className: t('array')\n    }, get(arrType.elements[0]), \"[]\");\n  }\n\n  var userType = getDoclet(tags, 'type');\n  if (userType) return renderName(userType);\n\n  switch (concrete.name) {\n    case 'literal':\n      return React.createElement(\"span\", {\n        className: t('literal')\n      }, concrete.value);\n\n    case 'signature':\n      return React.createElement(\"span\", {\n        className: t(\"\".concat(concrete.type, \"-signature\"))\n      }, concrete.type === 'function' ? React.createElement(React.Fragment, null, \"(\", joinElements(concrete.signature.arguments, ', ', function (arg) {\n        return React.createElement(\"span\", {\n          className: t('argument')\n        }, arg.name, \": \", get(arg.type));\n      }), ') => ', React.createElement(\"span\", {\n        className: t('return')\n      }, get(concrete.signature[\"return\"]))) : concrete.raw);\n\n    case 'union':\n      return React.createElement(\"span\", {\n        className: t('union')\n      }, joinElements(concrete.elements, null, get));\n\n    case 'tuple':\n      {\n        return React.createElement(\"span\", {\n          className: t('tuple')\n        }, \"[\", joinElements(concrete.elements, ', ', get), \"]\");\n      }\n\n    case 'intersect':\n      return React.createElement(\"span\", {\n        className: t('intersect')\n      }, joinElements(concrete.elements, null, get));\n\n    default:\n      if (isArray(type)) return renderArray(type);\n      if (isPrimitive(type.name)) renderName(type.name);\n      return renderNamedType(type);\n  }\n}\n\nfunction TypescriptTypeValue(_ref2) {\n  var type = _ref2.type,\n      tags = _ref2.tags,\n      tokens = _ref2.tokens;\n  return React.createElement(React.Fragment, null, getType(type, tags, tokens));\n}\n\nexport default TypescriptTypeValue;","import \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.is-array\";\nimport _defineProperty from \"/Users/jquense/src/react-overlays/www/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/jquense/src/react-overlays/www/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es7.object.entries\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.function.name\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useMemo } from 'react';\nimport TypescriptTypeValue from './TypescriptTypeValue';\nimport { cleanDocletValue, getDisplayTypeName, getDoclet } from './utils';\n\nfunction mapToTypes(propType, tags) {\n  var map = function map(pt) {\n    return mapToTypes(pt, tags);\n  };\n\n  var name = getDisplayTypeName(propType.name);\n  var docletType = getDoclet(tags, 'type');\n\n  switch (propType.name) {\n    case 'object':\n      return {\n        name: 'Object'\n      };\n\n    case 'shape':\n      return {\n        name: 'signature',\n        type: 'object',\n        raw: '',\n        signature: {\n          properties: Object.entries(propType.value).map(function (_ref) {\n            var _ref2 = _slicedToArray(_ref, 2),\n                key = _ref2[0],\n                value = _ref2[1];\n\n            return {\n              key: key,\n              value: _objectSpread({}, map(value), {\n                required: value.required\n              })\n            };\n          })\n        }\n      };\n\n    case 'union':\n      return {\n        name: 'union',\n        elements: propType.value.map(map)\n      };\n\n    case 'enum':\n      {\n        var enumValues = propType.value || [];\n\n        if (!Array.isArray(enumValues)) {\n          return {\n            name: enumValues\n          };\n        }\n\n        return {\n          name: 'union',\n          elements: enumValues.map(function (e) {\n            return {\n              name: e.value\n            };\n          })\n        };\n      }\n\n    case 'arrayOf':\n      return {\n        name: 'Array',\n        elements: [map(propType.value)]\n      };\n\n    case 'custom':\n      return {\n        name: cleanDocletValue(docletType || propType.raw)\n      };\n\n    default:\n      return {\n        name: 'literal',\n        value: name\n      };\n  }\n}\n\nfunction PropTypeValue(_ref3) {\n  var type = _ref3.type,\n      tags = _ref3.tags,\n      tokens = _ref3.tokens;\n  var tsType = useMemo(function () {\n    return mapToTypes(type, tags);\n  }, [type, tags]);\n  return React.createElement(TypescriptTypeValue, {\n    type: tsType,\n    tags: tags,\n    tokens: tokens\n  });\n}\n\nexport default PropTypeValue;","import \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es6.array.some\";\nimport sortBy from 'lodash/sortBy';\nimport React from 'react';\nimport DefaultValue from './DefaultValue';\nimport PropTypeValue from './PropTypeValue';\nimport TypescriptTypeValue from './TypescriptTypeValue';\nimport { docletsToMap, getTypeName } from './utils';\n\nvar isElementType = function isElementType(name, types) {\n  return types.some(function (t) {\n    if (typeof t === 'string') return t === name;\n    return !!name.match(t);\n  });\n};\n\nexport default function renderProps(propsData) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      tokenMap = _ref.tokenMap,\n      _ref$elementTypes = _ref.elementTypes,\n      elementTypes = _ref$elementTypes === void 0 ? ['elementType', /React\\.ComponentType(<.*>)?/] : _ref$elementTypes;\n\n  return sortBy(propsData, 'name').filter(function (prop) {\n    return prop.type && !prop.tags.find(function (d) {\n      return d.name === 'private' || d.name === 'ignore';\n    });\n  }).map(function (propData) {\n    var _description$markdown;\n\n    var name = propData.name,\n        type = propData.type,\n        defaultValue = propData.defaultValue,\n        description = propData.description,\n        tags = propData.tags,\n        tsType = propData.tsType;\n    var docletMap = docletsToMap(tags);\n    var typeName = getTypeName(propData);\n    var descHtml = (description === null || description === void 0 ? void 0 : (_description$markdown = description.markdownRemark) === null || _description$markdown === void 0 ? void 0 : _description$markdown.html) || '';\n    var renderedType = null;\n    if (tsType) renderedType = React.createElement(TypescriptTypeValue, {\n      type: tsType,\n      tags: tags,\n      tokens: tokenMap\n    });else if (type) renderedType = React.createElement(PropTypeValue, {\n      type: type,\n      tags: tags,\n      tokens: tokenMap\n    });\n    return {\n      name: name,\n      tags: tags,\n      typeName: typeName,\n      description: descHtml,\n      deprecated: docletMap.get('deprecated'),\n      type: renderedType,\n      defaultValue: defaultValue && React.createElement(DefaultValue, Object.assign({}, defaultValue, {\n        isElementType: isElementType(typeName, elementTypes)\n      })),\n      propData: propData\n    };\n  });\n}","import { MDXRenderer } from 'gatsby-plugin-mdx';\nimport React from 'react';\n\ninterface Props {\n  as?: React.ElementType;\n  html?: string;\n  mdx?: { body: string };\n}\n\n/** @public */\nfunction PropDescription({ mdx, html, as: Tag = 'div' }: Props) {\n  if (mdx)\n    return (\n      <Tag>\n        <MDXRenderer>{mdx.body}</MDXRenderer>\n      </Tag>\n    );\n\n  return <Tag dangerouslySetInnerHTML={{ __html: html }} />;\n}\n\nexport default PropDescription;\n","/** @jsx _j **/\n/** @jsxFrag _f **/\n\nconst { jsx: _j, F: _f } = require('astroturf');\nimport renderProps from '@docpocalypse/props-table';\nimport { TokenMap } from '@docpocalypse/props-table/src/TypescriptTypeValue';\nimport { MDXProvider } from '@mdx-js/react';\n\nimport React, { useMemo } from 'react';\n\nimport LinkedHeading from './LinkedHeading';\nimport Pre from './Pre';\nimport PropDescription from './PropDescription';\n\nconst tokenMap: TokenMap = require('./PropsList-tokenMap.module.css');\n\nconst styles = require('./PropsList-styles.module.css');\n\nfunction PropsTable({ metadata }) {\n  const { name } = metadata;\n  const props = renderProps(metadata.props || [], { tokenMap });\n  const components = useMemo(\n    () => ({\n      pre: p => <Pre {...p} name={name} />,\n    }),\n    [name],\n  );\n\n  return (\n    <>\n      {props.map(prop => (\n        <React.Fragment key={prop.name}>\n          <LinkedHeading h={3} id={prop.name}>\n            <div\n              css={[require(\"./PropsList-CssProp1_div.module.css\"), []]}\n            >\n              <span className={styles.PropListName}>{prop.name}</span>\n              {prop.propData.required && (\n                <strong className={styles.PropListRequiredBadge}>\n                  required\n                </strong>\n              )}\n            </div>\n          </LinkedHeading>\n\n          <MDXProvider components={components}>\n            <PropDescription\n              mdx={prop.propData.description?.mdx}\n              html={prop.description}\n            />\n          </MDXProvider>\n          <div\n            css={[require(\"./PropsList-CssProp2_div.module.css\"), []]}\n          >\n            <div>\n              <strong>type:</strong>\n              <span className={styles.PropListTypeDefinition}>{prop.type}</span>\n            </div>\n            {prop.defaultValue && (\n              <div className=\"mt-1\">\n                <strong>default:</strong>\n                <code className={styles.PropListDefaultValue}>\n                  {prop.defaultValue}\n                </code>\n              </div>\n            )}\n          </div>\n        </React.Fragment>\n      ))}\n    </>\n  );\n}\n\nexport default PropsTable;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"union\":\"PropsList-tokenMap-module--union--10mxw\"};","import { MDXProvider } from '@mdx-js/react';\nimport { graphql } from 'gatsby';\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\nimport { useMDXScope } from 'gatsby-plugin-mdx/context';\nimport React, { useMemo } from 'react';\n\nimport BasePre from './Pre';\n\ninterface Props {\n  example: any;\n  name: string;\n}\n\nexport default function Example({ example, name }: Props) {\n  const scope = useMDXScope();\n  const pre = useMemo(() => {\n    return props => <BasePre {...props} name={name} />;\n  }, [name]);\n\n  return example ? (\n    <MDXProvider components={{ pre }}>\n      <MDXRenderer scope={{ frontmatter: example.frontmatter, ...scope }}>\n        {example.body}\n      </MDXRenderer>\n    </MDXProvider>\n  ) : null;\n}\n\nexport const fragment = graphql`\n  fragment Example_example on DocpocalypseExample {\n    body\n  }\n`;\n","import { MDXRenderer } from 'gatsby-plugin-mdx';\nimport React from 'react';\n\nimport ComponentImport from './ComponentImport';\nimport Example from './Example';\nimport LinkedHeading from './LinkedHeading';\nimport Heading from './OutlineHeading';\nimport PageLayout from './PageLayout';\n\nlet Props: any;\n// @ts-ignore\nif (__DOCPOC_PROPS_LAYOUT__ === 'list') {\n  Props = require('./PropsList').default;\n} else {\n  Props = require('./PropsTable').default;\n}\n\nfunction ComponentPage({ data }) {\n  const { description, importName, name, example } = data.docpocalypse;\n\n  return (\n    <PageLayout>\n      <div>\n        <Heading h={1} id={`${name}-page`} title={name}>\n          {name}\n        </Heading>\n      </div>\n\n      <Example example={example} name={name} />\n\n      <LinkedHeading h={2} id={`${name}-api`}>\n        API\n      </LinkedHeading>\n      <div>\n        {importName && (\n          <ComponentImport\n            importName={importName}\n            docNode={data.docpocalypse}\n          />\n        )}\n      </div>\n\n      {description?.mdx && (\n        <div>\n          <MDXRenderer scope={{ React }}>{description.mdx.body}</MDXRenderer>\n        </div>\n      )}\n      <Props metadata={data.docpocalypse} />\n    </PageLayout>\n  );\n}\n\nexport default ComponentPage;\n","import { graphql } from 'gatsby';\nimport React from 'react';\nimport ComponentPage from '../components/ComponentPage';\n\nexport default function ComponentPageTemplate(props) {\n  return <ComponentPage {...props} />;\n}\n\nexport const pageQuery = graphql`\n  query($nodeId: String) {\n    docpocalypse(id: { eq: $nodeId }) {\n      id\n      name\n      importName\n      example {\n        ...Example_example\n      }\n      description {\n        ...PropsTable_description\n      }\n      ...PropsTable_metadata\n    }\n  }\n`;\n","import React from 'react';\nimport { highlight } from '@docpocalypse/code-live';\nimport { DocumentationNode } from '@docpocalypse/gatsby-theme-core';\n\ninterface Props {\n  importName: string;\n  docNode?: DocumentationNode;\n}\n\nfunction ComponentImport({ importName, docNode: _, ...props }: Props) {\n  return (\n    <code\n      {...props}\n      // eslint-disable-next-line react/no-danger\n      dangerouslySetInnerHTML={{\n        __html: highlight(importName, 'js')\n      }}\n    />\n  );\n}\n\nexport default ComponentImport;\n"],"sourceRoot":""}