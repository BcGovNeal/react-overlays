{"version":3,"sources":["webpack:///./src/pages/transitions.js","webpack:///./src/examples/Transition.js"],"names":["ModalPage","location","className","href","codeText","TransitionSource","module","exports"],"mappings":"2FAAA,4EAoCeA,UA5Bf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OACE,kBAAC,IAAD,CAAMA,SAAUA,GACd,wBAAIC,UAAU,eACZ,kBAAC,IAAD,qBAEF,oEACwC,4CADxC,oCAEwB,4CAFxB,0BAEuE,IACrE,uBAAGC,KAAK,qDAAR,gCAEK,IALP,aAOE,4CAPF,gCAUA,+CACmB,+CADnB,2DAKA,kBAAC,IAAD,CAAYC,SAAUC,S,mBC7B5BC,EAAOC,QAAU","file":"component---src-pages-transitions-js-3572e353569fdc256847.js","sourcesContent":["import React from 'react';\nimport Anchor from '../components/Anchor';\nimport Page from '../components/Page';\nimport Playground from '../components/Playground';\nimport TransitionSource from '../examples/Transition';\n\nconst propTypes = {};\n\nfunction ModalPage({ location }) {\n  return (\n    <Page location={location}>\n      <h2 className=\"page-header\">\n        <Anchor>Transitions</Anchor>\n      </h2>\n      <p>\n        Animation of components is handled by <code>transition</code> props. If\n        a component accepts a <code>transition</code> prop you can provide a{' '}\n        <a href=\"https://github.com/reactjs/react-transition-group\">\n          react-transition-group@2.0.0\n        </a>{' '}\n        compatible\n        <code>Transition</code> component and it will work.\n      </p>\n\n      <p>\n        Feel free to use <code>CSSTransition</code> specifically, or roll your\n        own like the below example.\n      </p>\n\n      <Playground codeText={TransitionSource} />\n    </Page>\n  );\n}\n\nModalPage.propTypes = propTypes;\n\nexport default ModalPage;\n","module.exports = \"const FADE_DURATION = 200;\\n\\ninjectCss(`\\n  .fade {\\n    opacity: 0;\\n    transition: opacity ${FADE_DURATION}ms linear;\\n  }\\n\\n  .show {\\n    opacity: 1;\\n  }\\n\\n  .transition-example-modal {\\n    position: fixed;\\n    z-index: 1040;\\n    top: 0; bottom: 0; left: 0; right: 0;\\n  }\\n\\n  .transition-example-backdrop {\\n    position: fixed;\\n    top: 0; bottom: 0; left: 0; right: 0;\\n    background-color: #000;\\n  }\\n\\n  .transition-example-backdrop.fade.in {\\n    opacity: 0.5;\\n  }\\n\\n  .transition-example-dialog {\\n    position: absolute;\\n    width: 400;\\n    top: 50%; left: 50%;\\n    transform: translate(-50%, -50%);\\n    border: 1px solid #e5e5e5;\\n    background-color: white;\\n    box-shadow: 0 5px 15px rgba(0, 0, 0, .5);\\n    padding: 20px;\\n  }\\n`);\\n\\nconst fadeStyles = {\\n  entering: 'show',\\n  entered: 'show'\\n};\\n\\nconst Fade = ({ children, ...props }) => (\\n  <Transition {...props} timeout={FADE_DURATION}>\\n    {(status, innerProps) =>\\n      React.cloneElement(children, {\\n        ...innerProps,\\n        className: `fade ${fadeStyles[status]} ${children.props.className}`\\n      })\\n    }\\n  </Transition>\\n);\\n\\nclass TransitionExample extends React.Component {\\n  constructor(...args) {\\n    super(...args);\\n\\n    this.state = { showModal: false };\\n    this.toggleModal = () => {\\n      this.setState(state => ({ showModal: !state.showModal }));\\n    };\\n\\n    this.toggleTooltip = () => {\\n      this.setState(state => ({ showTooltip: !state.showTooltip }));\\n    };\\n\\n    this.tooltipRef = React.createRef();\\n  }\\n\\n  render() {\\n    return (\\n      <div className=\\\"transition-example\\\">\\n        <button\\n          type=\\\"button\\\"\\n          className=\\\"btn btn-primary mr-3\\\"\\n          onClick={this.toggleModal}\\n        >\\n          Show Animated Modal\\n        </button>\\n\\n        <button\\n          type=\\\"button\\\"\\n          className=\\\"btn btn-primary\\\"\\n          onClick={this.toggleTooltip}\\n          ref={this.tooltipRef}\\n        >\\n          Show Tooltip\\n        </button>\\n\\n        <Overlay\\n          placement=\\\"top\\\"\\n          transition={Fade}\\n          show={this.state.showTooltip}\\n          modifiers={{ offset: { enabled: true, offset: '0 5px' } }}\\n          target={() => this.tooltipRef.current}\\n        >\\n          {({ props: { ref, style } }) => (\\n            <div ref={ref} className=\\\"tooltip tooltip-inner\\\" style={style}>\\n              Hello there\\n            </div>\\n          )}\\n        </Overlay>\\n\\n        <Modal\\n          transition={Fade}\\n          backdropTransition={Fade}\\n          className=\\\"transition-example-modal\\\"\\n          backdropClassName=\\\"transition-example-backdrop\\\"\\n          show={this.state.showModal}\\n          onHide={this.toggleModal}\\n        >\\n          <div className=\\\"transition-example-dialog\\\">\\n            <h4 id=\\\"modal-label\\\">I&apos;m fading in!</h4>\\n            <p>\\n              Anim pariatur cliche reprehenderit, enim eiusmod high life\\n              accusamus terry richardson ad squid. Nihil anim keffiyeh\\n              helvetica, craft beer labore wes anderson cred nesciunt sapiente\\n              ea proident.\\n            </p>\\n          </div>\\n        </Modal>\\n      </div>\\n    );\\n  }\\n}\\n\\nrender(<TransitionExample />);\\n\""],"sourceRoot":""}